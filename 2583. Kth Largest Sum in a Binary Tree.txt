/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        vector<long long>sum;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int l=q.size();
            long long s=0;
            for(int i=0;i<l;i++){
                TreeNode* front=q.front();
                q.pop();
                s=s+front->val;
                if(front->left){
                    q.push(front->left);
                }
                if(front->right){
                    q.push(front->right);
                }
            }
            sum.push_back(s);
        }
        
        sort(sum.begin(),sum.end());
        if(sum.size()<k){
            return -1;
        }
        return sum[sum.size()-k];
    }
};

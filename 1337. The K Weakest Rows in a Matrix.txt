class Solution {
public:
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        // priority_queue<pair<int,int>> p;
        vector<pair<int,int>>p;
        for(int i=0;i<mat.size();i++){
            int count=0;
            for(int j=0;j<mat[i].size();j++){
                if(mat[i][j]==1){
                    count++;
                }
            }
            p.push_back({count,i});
        }    
        sort(p.begin(),p.end());
        vector<int>ans;
        for(int i=0;i<k;i++){
            // cout<<p[i].first<<" "<<p[i].second<<endl;
            ans.push_back(p[i].second);
        }
        return ans;
    }
};
